apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-allopen'

allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.domain.weatherapp.OpenClass'
}
android {
    androidExtensions {
        experimental = true
    }
    dataBinding {
        enabled = true
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.domain.weatherapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.domain.weatherapp.util.CustomTestRunner"
        buildConfigField 'String', 'API_DEVELOPER_KEY', "\"f5d4518e2411ff6452ddb2e2cbba3f36\""

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android {
        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    def retrofit_version = "2.7.0"
    def retrofit_interceptor_version = "4.2.1"
    def dagger_version = '2.25.4'
    def coroutines_version = "1.3.3"

    def lifecycle_version = '2.2.0-rc03'
    def glide_version = '4.11.0'
    def view_pager_version = '1.0.0'
    def material_version = '1.2.0-alpha03'
    def mockwebserver_version = "4.2.1"
    def okhttp_version = "4.2.1"
    def navigation_version = '2.0.0'
    def nav_version = "2.2.0-rc04"

    //testing
    def junit_version = '4.12'
    def espresso_version = '3.1.0'
    def coreTesting_version = '2.0.0'
    def testExtJunit = '1.1.0'
    def uiAutomator_version = '2.2.0'
    def mockito_version = "2.25.0"
    def mockitoAndroid_version = "2.25.0"
    def testCore_version = "1.1.0"
    def testRunner_version = "1.1.0"
    def testRules_version = "1.1.0"
    def appCompat_version = '1.1.0-beta01'
    def recyclerView_version = '1.1.0-alpha05'
    def fragment_version = "1.2.0-rc05" // must use for new factory stuff



    implementation "androidx.viewpager2:viewpager2:$view_pager_version"

    implementation "com.google.android.material:material:$material_version"

    //glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    //kotlin lifecycle
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    //implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:'1.0.0'"

    //kotlinx-coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"


    //dagger2 dependencies
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofit_interceptor_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'


    // architecture comp. navigation

    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-runtime:$nav_version"

    implementation 'com.google.android.gms:play-services-location:17.0.0'




    //testing

    testImplementation "junit:junit:$junit_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockwebserver_version"

    //testImplementation("com.squareup.okhttp3:mockwebserver:4.0.0")
    testImplementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    testImplementation "org.mockito:mockito-core:$mockito_version"


    testImplementation "androidx.arch.core:core-testing:$coreTesting_version"
    testImplementation "commons-io:commons-io:2.4"

    androidTestImplementation "androidx.test:core:$testCore_version"
    androidTestImplementation "androidx.test:runner:$testRunner_version"
    androidTestImplementation "androidx.test:rules:$testRules_version"

    androidTestImplementation "androidx.appcompat:appcompat:$appCompat_version"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerView_version"
    androidTestImplementation "com.google.android.material:material:$material_version"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    // androidx.fragment

    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    def activity_version = "1.0.0"
    // Java language implementation
    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"

    androidTestImplementation "androidx.test.ext:junit:$testExtJunit"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomator_version"


    androidTestImplementation "androidx.arch.core:core-testing:$coreTesting_version"
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockitoAndroid_version"

}
